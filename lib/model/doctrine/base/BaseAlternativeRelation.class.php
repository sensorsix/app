<?php

/**
 * BaseAlternativeRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $from_id
 * @property integer $to_id
 * @property string $created_by
 * @property Alternative $AlternativeFrom
 * @property Alternative $AlternativeTo
 * 
 * @method integer             getFromId()          Returns the current record's "from_id" value
 * @method integer             getToId()            Returns the current record's "to_id" value
 * @method string              getCreatedBy()       Returns the current record's "created_by" value
 * @method Alternative         getAlternativeFrom() Returns the current record's "AlternativeFrom" value
 * @method Alternative         getAlternativeTo()   Returns the current record's "AlternativeTo" value
 * @method AlternativeRelation setFromId()          Sets the current record's "from_id" value
 * @method AlternativeRelation setToId()            Sets the current record's "to_id" value
 * @method AlternativeRelation setCreatedBy()       Sets the current record's "created_by" value
 * @method AlternativeRelation setAlternativeFrom() Sets the current record's "AlternativeFrom" value
 * @method AlternativeRelation setAlternativeTo()   Sets the current record's "AlternativeTo" value
 * 
 * @package    dmp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAlternativeRelation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('alternative_relation');
        $this->hasColumn('from_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('to_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('created_by', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Alternative as AlternativeFrom', array(
             'local' => 'from_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Alternative as AlternativeTo', array(
             'local' => 'to_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created_at',
              'type' => 'timestamp',
              'format' => 'Y-m-d H:i:s',
             ),
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}