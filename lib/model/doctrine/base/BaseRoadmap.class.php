<?php

/**
 * BaseRoadmap
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $name
 * @property string $description
 * @property string $token
 * @property integer $folder_id
 * @property boolean $active
 * @property enum $status
 * @property boolean $show_items
 * @property boolean $show_releases
 * @property boolean $show_dependencies
 * @property boolean $show_description
 * @property workspace_mode $workspace_mode
 * @property sfGuardUser $User
 * @property Folder $Folder
 * @property Doctrine_Collection $RoadmapDecision
 * 
 * @method integer             getUserId()            Returns the current record's "user_id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getDescription()       Returns the current record's "description" value
 * @method string              getToken()             Returns the current record's "token" value
 * @method integer             getFolderId()          Returns the current record's "folder_id" value
 * @method boolean             getActive()            Returns the current record's "active" value
 * @method enum                getStatus()            Returns the current record's "status" value
 * @method boolean             getShowItems()         Returns the current record's "show_items" value
 * @method boolean             getShowReleases()      Returns the current record's "show_releases" value
 * @method boolean             getShowDependencies()  Returns the current record's "show_dependencies" value
 * @method boolean             getShowDescription()   Returns the current record's "show_description" value
 * @method workspace_mode      getWorkspaceMode()     Returns the current record's "workspace_mode" value
 * @method sfGuardUser         getUser()              Returns the current record's "User" value
 * @method Folder              getFolder()            Returns the current record's "Folder" value
 * @method Doctrine_Collection getRoadmapDecisions()  Returns the current record's "RoadmapDecisions" collection
 * @method Doctrine_Collection getRoadmapDecision()   Returns the current record's "RoadmapDecision" collection
 * @method Roadmap             setUserId()            Sets the current record's "user_id" value
 * @method Roadmap             setName()              Sets the current record's "name" value
 * @method Roadmap             setDescription()       Sets the current record's "description" value
 * @method Roadmap             setToken()             Sets the current record's "token" value
 * @method Roadmap             setFolderId()          Sets the current record's "folder_id" value
 * @method Roadmap             setActive()            Sets the current record's "active" value
 * @method Roadmap             setStatus()            Sets the current record's "status" value
 * @method Roadmap             setShowItems()         Sets the current record's "show_items" value
 * @method Roadmap             setShowReleases()      Sets the current record's "show_releases" value
 * @method Roadmap             setShowDependencies()  Sets the current record's "show_dependencies" value
 * @method Roadmap             setShowDescription()   Sets the current record's "show_description" value
 * @method Roadmap             setWorkspaceMode()     Sets the current record's "workspace_mode" value
 * @method Roadmap             setUser()              Sets the current record's "User" value
 * @method Roadmap             setFolder()            Sets the current record's "Folder" value
 * @method Roadmap             setRoadmapDecisions()  Sets the current record's "RoadmapDecisions" collection
 * @method Roadmap             setRoadmapDecision()   Sets the current record's "RoadmapDecision" collections
 * @property Doctrine_Collection $RoadmapDecision
 * 
 * @method integer             getUserId()            Returns the current record's "user_id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getDescription()       Returns the current record's "description" value
 * @method string              getToken()             Returns the current record's "token" value
 * @method integer             getFolderId()          Returns the current record's "folder_id" value
 * @method boolean             getActive()            Returns the current record's "active" value
 * @method enum                getStatus()            Returns the current record's "status" value
 * @method boolean             getShowItems()         Returns the current record's "show_items" value
 * @method boolean             getShowReleases()      Returns the current record's "show_releases" value
 * @method boolean             getShowDependencies()  Returns the current record's "show_dependencies" value
 * @method boolean             getShowDescription()   Returns the current record's "show_description" value
 * @method workspace_mode      getWorkspaceMode()     Returns the current record's "workspace_mode" value
 * @method sfGuardUser         getUser()              Returns the current record's "User" value
 * @method Folder              getFolder()            Returns the current record's "Folder" value
 * @method Doctrine_Collection getRoadmapDecisions()  Returns the current record's "RoadmapDecisions" collection
 * @method Doctrine_Collection getRoadmapDecision()   Returns the current record's "RoadmapDecision" collection
 * @method Roadmap             setUserId()            Sets the current record's "user_id" value
 * @method Roadmap             setName()              Sets the current record's "name" value
 * @method Roadmap             setDescription()       Sets the current record's "description" value
 * @method Roadmap             setToken()             Sets the current record's "token" value
 * @method Roadmap             setFolderId()          Sets the current record's "folder_id" value
 * @method Roadmap             setActive()            Sets the current record's "active" value
 * @method Roadmap             setStatus()            Sets the current record's "status" value
 * @method Roadmap             setShowItems()         Sets the current record's "show_items" value
 * @method Roadmap             setShowReleases()      Sets the current record's "show_releases" value
 * @method Roadmap             setShowDependencies()  Sets the current record's "show_dependencies" value
 * @method Roadmap             setShowDescription()   Sets the current record's "show_description" value
 * @method Roadmap             setWorkspaceMode()     Sets the current record's "workspace_mode" value
 * @method Roadmap             setUser()              Sets the current record's "User" value
 * @method Roadmap             setFolder()            Sets the current record's "Folder" value
 * @method Roadmap             setRoadmapDecisions()  Sets the current record's "RoadmapDecisions" collection
 * @method Roadmap             setRoadmapDecision()   Sets the current record's "RoadmapDecision" collection
 * 
 * @package    dmp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRoadmap extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('roadmap');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('token', 'string', 6, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 6,
             ));
        $this->hasColumn('folder_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Draft',
              1 => 'Reviewed',
              2 => 'Approved',
              3 => 'Under revision',
             ),
             'default' => 'Draft',
             ));
        $this->hasColumn('show_items', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('show_releases', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('show_dependencies', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('show_description', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('workspace_mode', 'workspace_mode', null, array(
             'type' => 'workspace_mode',
             'values' => 
             array(
              0 => 'timeline',
              1 => 'list',
             ),
             'default' => 'timeline',
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Folder', array(
             'local' => 'folder_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('RoadmapDecision as RoadmapDecisions', array(
             'local' => 'id',
             'foreign' => 'id'));

        $this->hasMany('RoadmapDecision', array(
             'local' => 'id',
             'foreign' => 'roadmap_id'));
    }
}