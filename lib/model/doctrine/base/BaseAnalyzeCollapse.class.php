<?php

/**
 * BaseAnalyzeCollapse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $decision_id
 * @property boolean $filter
 * @property boolean $logic_filter
 * @property boolean $role
 * @property boolean $criteria_weights
 * @property boolean $bar_chart
 * @property boolean $alternative_score
 * @property boolean $stacked_bar
 * @property boolean $graphs
 * @property boolean $xy_plot
 * @property boolean $bubble_plot
 * @property boolean $cumulative_gain
 * @property boolean $cost_allocation
 * @property boolean $budget_allocation
 * @property boolean $partitions
 * @property boolean $partition_allocation
 * @property boolean $comments
 * @property boolean $status_filter
 * @property boolean $tag_filter
 * @property Decision $Decision
 * 
 * @method integer         getDecisionId()           Returns the current record's "decision_id" value
 * @method boolean         getFilter()               Returns the current record's "filter" value
 * @method boolean         getLogicFilter()          Returns the current record's "logic_filter" value
 * @method boolean         getRole()                 Returns the current record's "role" value
 * @method boolean         getCriteriaWeights()      Returns the current record's "criteria_weights" value
 * @method boolean         getBarChart()             Returns the current record's "bar_chart" value
 * @method boolean         getAlternativeScore()     Returns the current record's "alternative_score" value
 * @method boolean         getStackedBar()           Returns the current record's "stacked_bar" value
 * @method boolean         getGraphs()               Returns the current record's "graphs" value
 * @method boolean         getXyPlot()               Returns the current record's "xy_plot" value
 * @method boolean         getBubblePlot()           Returns the current record's "bubble_plot" value
 * @method boolean         getCumulativeGain()       Returns the current record's "cumulative_gain" value
 * @method boolean         getCostAllocation()       Returns the current record's "cost_allocation" value
 * @method boolean         getBudgetAllocation()     Returns the current record's "budget_allocation" value
 * @method boolean         getPartitions()           Returns the current record's "partitions" value
 * @method boolean         getPartitionAllocation()  Returns the current record's "partition_allocation" value
 * @method boolean         getComments()             Returns the current record's "comments" value
 * @method boolean         getStatusFilter()         Returns the current record's "status_filter" value
 * @method boolean         getTagFilter()            Returns the current record's "tag_filter" value
 * @method Decision        getDecision()             Returns the current record's "Decision" value
 * @method AnalyzeCollapse setDecisionId()           Sets the current record's "decision_id" value
 * @method AnalyzeCollapse setFilter()               Sets the current record's "filter" value
 * @method AnalyzeCollapse setLogicFilter()          Sets the current record's "logic_filter" value
 * @method AnalyzeCollapse setRole()                 Sets the current record's "role" value
 * @method AnalyzeCollapse setCriteriaWeights()      Sets the current record's "criteria_weights" value
 * @method AnalyzeCollapse setBarChart()             Sets the current record's "bar_chart" value
 * @method AnalyzeCollapse setAlternativeScore()     Sets the current record's "alternative_score" value
 * @method AnalyzeCollapse setStackedBar()           Sets the current record's "stacked_bar" value
 * @method AnalyzeCollapse setGraphs()               Sets the current record's "graphs" value
 * @method AnalyzeCollapse setXyPlot()               Sets the current record's "xy_plot" value
 * @method AnalyzeCollapse setBubblePlot()           Sets the current record's "bubble_plot" value
 * @method AnalyzeCollapse setCumulativeGain()       Sets the current record's "cumulative_gain" value
 * @method AnalyzeCollapse setCostAllocation()       Sets the current record's "cost_allocation" value
 * @method AnalyzeCollapse setBudgetAllocation()     Sets the current record's "budget_allocation" value
 * @method AnalyzeCollapse setPartitions()           Sets the current record's "partitions" value
 * @method AnalyzeCollapse setPartitionAllocation()  Sets the current record's "partition_allocation" value
 * @method AnalyzeCollapse setComments()             Sets the current record's "comments" value
 * @method AnalyzeCollapse setStatusFilter()         Sets the current record's "status_filter" value
 * @method AnalyzeCollapse setTagFilter()            Sets the current record's "tag_filter" value
 * @method AnalyzeCollapse setDecision()             Sets the current record's "Decision" value
 * 
 * @package    dmp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAnalyzeCollapse extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('analyze_collapse');
        $this->hasColumn('decision_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('filter', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('logic_filter', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('role', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('criteria_weights', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('bar_chart', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('alternative_score', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('stacked_bar', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('graphs', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('xy_plot', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('bubble_plot', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('cumulative_gain', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('cost_allocation', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('budget_allocation', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('partitions', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('partition_allocation', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('comments', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('status_filter', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('tag_filter', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Decision', array(
             'local' => 'decision_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}