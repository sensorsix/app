<?php

/**
 * BaseAlternativeType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $type_id
 * @property string $name
 * @property string $short_name
 * @property DecisionType $DecisionType
 * @property Doctrine_Collection $Alternative
 * 
 * @method integer             getTypeId()       Returns the current record's "type_id" value
 * @method string              getName()         Returns the current record's "name" value
 * @method string              getShortName()    Returns the current record's "short_name" value
 * @method DecisionType        getDecisionType() Returns the current record's "DecisionType" value
 * @method Doctrine_Collection getAlternative()  Returns the current record's "Alternative" collection
 * @method AlternativeType     setTypeId()       Sets the current record's "type_id" value
 * @method AlternativeType     setName()         Sets the current record's "name" value
 * @method AlternativeType     setShortName()    Sets the current record's "short_name" value
 * @method AlternativeType     setDecisionType() Sets the current record's "DecisionType" value
 * @method AlternativeType     setAlternative()  Sets the current record's "Alternative" collection
 * 
 * @package    dmp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAlternativeType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('alternative_type');
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('short_name', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DecisionType', array(
             'local' => 'type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Alternative', array(
             'local' => 'id',
             'foreign' => 'type_id'));
    }
}