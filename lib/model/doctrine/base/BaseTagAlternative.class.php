<?php

/**
 * BaseTagAlternative
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tag_id
 * @property integer $alternative_id
 * @property Alternative $Alternative
 * @property Tag $Tag
 * 
 * @method integer        getTagId()          Returns the current record's "tag_id" value
 * @method integer        getAlternativeId()  Returns the current record's "alternative_id" value
 * @method Alternative    getAlternative()    Returns the current record's "Alternative" value
 * @method Tag            getTag()            Returns the current record's "Tag" value
 * @method TagAlternative setTagId()          Sets the current record's "tag_id" value
 * @method TagAlternative setAlternativeId()  Sets the current record's "alternative_id" value
 * @method TagAlternative setAlternative()    Sets the current record's "Alternative" value
 * @method TagAlternative setTag()            Sets the current record's "Tag" value
 * 
 * @package    dmp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTagAlternative extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag_alternative');
        $this->hasColumn('tag_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('alternative_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('symfony', array(
             'filter' => true,
             'form' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Alternative', array(
             'local' => 'alternative_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Tag', array(
             'local' => 'tag_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}