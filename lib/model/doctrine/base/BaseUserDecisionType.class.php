<?php

/**
 * BaseUserDecisionType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $type_id
 * @property DecisionType $Type
 * @property sfGuardUser $User
 * 
 * @method integer          getUserId()  Returns the current record's "user_id" value
 * @method integer          getTypeId()  Returns the current record's "type_id" value
 * @method DecisionType     getType()    Returns the current record's "Type" value
 * @method sfGuardUser      getUser()    Returns the current record's "User" value
 * @method UserDecisionType setUserId()  Sets the current record's "user_id" value
 * @method UserDecisionType setTypeId()  Sets the current record's "type_id" value
 * @method UserDecisionType setType()    Sets the current record's "Type" value
 * @method UserDecisionType setUser()    Sets the current record's "User" value
 * 
 * @package    dmp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserDecisionType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_decision_type');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('role_criterion_alternative_idx', array(
             'fields' => 
             array(
              0 => 'user_id',
              1 => 'type_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DecisionType as Type', array(
             'local' => 'type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}