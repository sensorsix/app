<?php

/**
 * BaseLogicalFilter
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $decision_id
 * @property integer $criterion_id
 * @property enum $logical_operator
 * @property integer $value
 * @property Decision $Decision
 * @property Criterion $Criterion
 * 
 * @method integer       getDecisionId()       Returns the current record's "decision_id" value
 * @method integer       getCriterionId()      Returns the current record's "criterion_id" value
 * @method enum          getLogicalOperator()  Returns the current record's "logical_operator" value
 * @method integer       getValue()            Returns the current record's "value" value
 * @method Decision      getDecision()         Returns the current record's "Decision" value
 * @method Criterion     getCriterion()        Returns the current record's "Criterion" value
 * @method LogicalFilter setDecisionId()       Sets the current record's "decision_id" value
 * @method LogicalFilter setCriterionId()      Sets the current record's "criterion_id" value
 * @method LogicalFilter setLogicalOperator()  Sets the current record's "logical_operator" value
 * @method LogicalFilter setValue()            Sets the current record's "value" value
 * @method LogicalFilter setDecision()         Sets the current record's "Decision" value
 * @method LogicalFilter setCriterion()        Sets the current record's "Criterion" value
 * 
 * @package    dmp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLogicalFilter extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('logical_filter');
        $this->hasColumn('decision_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('criterion_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('logical_operator', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => '>',
              1 => '<',
              2 => '=',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('value', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Decision', array(
             'local' => 'decision_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Criterion', array(
             'local' => 'criterion_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}