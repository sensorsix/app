<?php

/**
 * BaseProjectRelease
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $decision_id
 * @property integer $criterion_id
 * @property string $name
 * @property enum $status
 * @property timestamp $start_date
 * @property timestamp $end_date
 * @property decimal $value
 * @property Decision $Decision
 * @property Criterion $Criterion
 * @property Doctrine_Collection $ProjectReleaseAlternative
 * @property Doctrine_Collection $TagRelease
 * 
 * @method integer             getDecisionId()                Returns the current record's "decision_id" value
 * @method integer             getCriterionId()               Returns the current record's "criterion_id" value
 * @method string              getName()                      Returns the current record's "name" value
 * @method enum                getStatus()                    Returns the current record's "status" value
 * @method timestamp           getStartDate()                 Returns the current record's "start_date" value
 * @method timestamp           getEndDate()                   Returns the current record's "end_date" value
 * @method decimal             getValue()                     Returns the current record's "value" value
 * @method Decision            getDecision()                  Returns the current record's "Decision" value
 * @method Criterion           getCriterion()                 Returns the current record's "Criterion" value
 * @method Doctrine_Collection getProjectReleaseAlternative() Returns the current record's "ProjectReleaseAlternative" collection
 * @method Doctrine_Collection getTagRelease()                Returns the current record's "TagRelease" collection
 * @method ProjectRelease      setDecisionId()                Sets the current record's "decision_id" value
 * @method ProjectRelease      setCriterionId()               Sets the current record's "criterion_id" value
 * @method ProjectRelease      setName()                      Sets the current record's "name" value
 * @method ProjectRelease      setStatus()                    Sets the current record's "status" value
 * @method ProjectRelease      setStartDate()                 Sets the current record's "start_date" value
 * @method ProjectRelease      setEndDate()                   Sets the current record's "end_date" value
 * @method ProjectRelease      setValue()                     Sets the current record's "value" value
 * @method ProjectRelease      setDecision()                  Sets the current record's "Decision" value
 * @method ProjectRelease      setCriterion()                 Sets the current record's "Criterion" value
 * @method ProjectRelease      setProjectReleaseAlternative() Sets the current record's "ProjectReleaseAlternative" collection
 * @method ProjectRelease      setTagRelease()                Sets the current record's "TagRelease" collection
 * 
 * @package    dmp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectRelease extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project_release');
        $this->hasColumn('decision_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('criterion_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Draft',
              1 => 'Reviewed',
              2 => 'Planned',
              3 => 'Doing',
              4 => 'Finished',
              5 => 'Parked',
             ),
             'default' => 'Draft',
             ));
        $this->hasColumn('start_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'format' => 'Y-m-d H:i:s',
             ));
        $this->hasColumn('end_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'format' => 'Y-m-d H:i:s',
             ));
        $this->hasColumn('value', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'length' => 20,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Decision', array(
             'local' => 'decision_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Criterion', array(
             'local' => 'criterion_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ProjectReleaseAlternative', array(
             'local' => 'id',
             'foreign' => 'release_id'));

        $this->hasMany('TagRelease', array(
             'local' => 'id',
             'foreign' => 'release_id'));
    }
}