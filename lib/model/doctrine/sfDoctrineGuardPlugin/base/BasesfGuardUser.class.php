<?php

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email_address
 * @property string $country
 * @property string $username
 * @property string $algorithm
 * @property string $salt
 * @property string $password
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property string $biography
 * @property timestamp $last_login
 * @property timestamp $last_payment_date
 * @property enum $account_type
 * @property integer $credit
 * @property string $logo_file
 * @property string $logo_url
 * @property string $header_color
 * @property boolean $wizard
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Permissions
 * @property Doctrine_Collection $sfGuardUserPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property sfGuardRememberKey $RememberKeys
 * @property sfGuardForgotPassword $ForgotPassword
 * @property Doctrine_Collection $Team
 * @property Doctrine_Collection $TeamMember
 * @property Doctrine_Collection $PaymentTransactions
 * @property Doctrine_Collection $Alternative
 * @property Doctrine_Collection $Comment
 * @property Doctrine_Collection $TypeTemplate
 * @property Doctrine_Collection $UserDecisionType
 * @property Doctrine_Collection $Types
 * @property Doctrine_Collection $Decisions
 * @property Doctrine_Collection $DecisionGroups
 * @property Doctrine_Collection $Roadmaps
 * @property Doctrine_Collection $Log
 * @property Doctrine_Collection $Response
 * @property Doctrine_Collection $Tag
 * @property Doctrine_Collection $Tokens
 * 
 * @method string                getFirstName()             Returns the current record's "first_name" value
 * @method string                getLastName()              Returns the current record's "last_name" value
 * @method string                getEmailAddress()          Returns the current record's "email_address" value
 * @method string                getCountry()               Returns the current record's "country" value
 * @method string                getUsername()              Returns the current record's "username" value
 * @method string                getAlgorithm()             Returns the current record's "algorithm" value
 * @method string                getSalt()                  Returns the current record's "salt" value
 * @method string                getPassword()              Returns the current record's "password" value
 * @method boolean               getIsActive()              Returns the current record's "is_active" value
 * @method boolean               getIsSuperAdmin()          Returns the current record's "is_super_admin" value
 * @method string                getBiography()             Returns the current record's "biography" value
 * @method timestamp             getLastLogin()             Returns the current record's "last_login" value
 * @method timestamp             getLastPaymentDate()       Returns the current record's "last_payment_date" value
 * @method enum                  getAccountType()           Returns the current record's "account_type" value
 * @method integer               getCredit()                Returns the current record's "credit" value
 * @method string                getLogoFile()              Returns the current record's "logo_file" value
 * @method string                getLogoUrl()               Returns the current record's "logo_url" value
 * @method string                getHeaderColor()           Returns the current record's "header_color" value
 * @method boolean               getWizard()                Returns the current record's "wizard" value
 * @method Doctrine_Collection   getGroups()                Returns the current record's "Groups" collection
 * @method Doctrine_Collection   getPermissions()           Returns the current record's "Permissions" collection
 * @method Doctrine_Collection   getSfGuardUserPermission() Returns the current record's "sfGuardUserPermission" collection
 * @method Doctrine_Collection   getSfGuardUserGroup()      Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardRememberKey    getRememberKeys()          Returns the current record's "RememberKeys" value
 * @method sfGuardForgotPassword getForgotPassword()        Returns the current record's "ForgotPassword" value
 * @method Doctrine_Collection   getTeam()                  Returns the current record's "Team" collection
 * @method Doctrine_Collection   getTeamMember()            Returns the current record's "TeamMember" collection
 * @method Doctrine_Collection   getPaymentTransactions()   Returns the current record's "PaymentTransactions" collection
 * @method Doctrine_Collection   getAlternative()           Returns the current record's "Alternative" collection
 * @method Doctrine_Collection   getComment()               Returns the current record's "Comment" collection
 * @method Doctrine_Collection   getTypeTemplate()          Returns the current record's "TypeTemplate" collection
 * @method Doctrine_Collection   getUserDecisionType()      Returns the current record's "UserDecisionType" collection
 * @method Doctrine_Collection   getTypes()                 Returns the current record's "Types" collection
 * @method Doctrine_Collection   getDecisions()             Returns the current record's "Decisions" collection
 * @method Doctrine_Collection   getDecisionGroups()        Returns the current record's "DecisionGroups" collection
 * @method Doctrine_Collection   getRoadmaps()              Returns the current record's "Roadmaps" collection
 * @method Doctrine_Collection   getLog()                   Returns the current record's "Log" collection
 * @method Doctrine_Collection   getResponse()              Returns the current record's "Response" collection
 * @method Doctrine_Collection   getTag()                   Returns the current record's "Tag" collection
 * @method Doctrine_Collection   getTokens()                Returns the current record's "Tokens" collection
 * @method sfGuardUser           setFirstName()             Sets the current record's "first_name" value
 * @method sfGuardUser           setLastName()              Sets the current record's "last_name" value
 * @method sfGuardUser           setEmailAddress()          Sets the current record's "email_address" value
 * @method sfGuardUser           setCountry()               Sets the current record's "country" value
 * @method sfGuardUser           setUsername()              Sets the current record's "username" value
 * @method sfGuardUser           setAlgorithm()             Sets the current record's "algorithm" value
 * @method sfGuardUser           setSalt()                  Sets the current record's "salt" value
 * @method sfGuardUser           setPassword()              Sets the current record's "password" value
 * @method sfGuardUser           setIsActive()              Sets the current record's "is_active" value
 * @method sfGuardUser           setIsSuperAdmin()          Sets the current record's "is_super_admin" value
 * @method sfGuardUser           setBiography()             Sets the current record's "biography" value
 * @method sfGuardUser           setLastLogin()             Sets the current record's "last_login" value
 * @method sfGuardUser           setLastPaymentDate()       Sets the current record's "last_payment_date" value
 * @method sfGuardUser           setAccountType()           Sets the current record's "account_type" value
 * @method sfGuardUser           setCredit()                Sets the current record's "credit" value
 * @method sfGuardUser           setLogoFile()              Sets the current record's "logo_file" value
 * @method sfGuardUser           setLogoUrl()               Sets the current record's "logo_url" value
 * @method sfGuardUser           setHeaderColor()           Sets the current record's "header_color" value
 * @method sfGuardUser           setWizard()                Sets the current record's "wizard" value
 * @method sfGuardUser           setGroups()                Sets the current record's "Groups" collection
 * @method sfGuardUser           setPermissions()           Sets the current record's "Permissions" collection
 * @method sfGuardUser           setSfGuardUserPermission() Sets the current record's "sfGuardUserPermission" collection
 * @method sfGuardUser           setSfGuardUserGroup()      Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardUser           setRememberKeys()          Sets the current record's "RememberKeys" value
 * @method sfGuardUser           setForgotPassword()        Sets the current record's "ForgotPassword" value
 * @method sfGuardUser           setTeam()                  Sets the current record's "Team" collection
 * @method sfGuardUser           setTeamMember()            Sets the current record's "TeamMember" collection
 * @method sfGuardUser           setPaymentTransactions()   Sets the current record's "PaymentTransactions" collection
 * @method sfGuardUser           setAlternative()           Sets the current record's "Alternative" collection
 * @method sfGuardUser           setComment()               Sets the current record's "Comment" collection
 * @method sfGuardUser           setTypeTemplate()          Sets the current record's "TypeTemplate" collection
 * @method sfGuardUser           setUserDecisionType()      Sets the current record's "UserDecisionType" collection
 * @method sfGuardUser           setTypes()                 Sets the current record's "Types" collection
 * @method sfGuardUser           setDecisions()             Sets the current record's "Decisions" collection
 * @method sfGuardUser           setDecisionGroups()        Sets the current record's "DecisionGroups" collection
 * @method sfGuardUser           setRoadmaps()              Sets the current record's "Roadmaps" collection
 * @method sfGuardUser           setLog()                   Sets the current record's "Log" collection
 * @method sfGuardUser           setResponse()              Sets the current record's "Response" collection
 * @method sfGuardUser           setTag()                   Sets the current record's "Tag" collection
 * @method sfGuardUser           setTokens()                Sets the current record's "Tokens" collection
 * 
 * @package    dmp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('country', 'string', 2, array(
             'type' => 'string',
             'length' => 2,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'type' => 'string',
             'default' => 'sha1',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('biography', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('last_payment_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('account_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Trial',
              1 => 'Light',
              2 => 'Basic',
              3 => 'Pro',
              4 => 'Enterprise',
             ),
             'default' => 'Light',
             ));
        $this->hasColumn('credit', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('logo_file', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('logo_url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('header_color', 'string', 24, array(
             'type' => 'string',
             'default' => '#343537',
             'length' => 24,
             ));
        $this->hasColumn('wizard', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardUserPermission',
             'local' => 'user_id',
             'foreign' => 'permission_id'));

        $this->hasMany('sfGuardUserPermission', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardRememberKey as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardForgotPassword as ForgotPassword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('TeamMember as Team', array(
             'local' => 'id',
             'foreign' => 'manager_id'));

        $this->hasMany('TeamMember', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('PaymentTransaction as PaymentTransactions', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Alternative', array(
             'local' => 'id',
             'foreign' => 'assigned_to'));

        $this->hasMany('Comment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('TypeTemplate', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserDecisionType', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('DecisionType as Types', array(
             'refClass' => 'UserDecisionType',
             'local' => 'user_id',
             'foreign' => 'type_id'));

        $this->hasMany('Decision as Decisions', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Folder as DecisionGroups', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('InterfaceLabel as Roadmaps', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Log', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Response', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Tag', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Token as Tokens', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}