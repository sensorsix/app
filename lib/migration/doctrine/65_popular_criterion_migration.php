<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PopularCriterionMigration extends Doctrine_Migration_Base
{
  public function up()
  {
    $this->createTable('popular_criterion',
      array(
        'id'            =>
          array(
            'type'          => 'integer',
            'length'        => '8',
            'autoincrement' => '1',
            'primary'       => '1',
          ),
        'name'          =>
          array(
            'type'   => 'string',
            'length' => '255',
          ),
        'description'   =>
          array(
            'type'   => 'string',
            'length' => '',
          ),
        'measurement'   =>
          array(
            'type'    => 'enum',
            'values'  =>
              array(
                0 => 'direct rating',
                1 => 'direct float',
                2 => 'forced ranking',
                3 => 'five point scale',
                4 => 'ten point scale',
                5 => 'comment',
              ),
            'default' => 'five point scale',
            'length'  => '',
          ),
        'variable_type' =>
          array(
            'type'    => 'enum',
            'values'  =>
              array(
                0 => 'Benefit',
                1 => 'Cost',
                2 => 'Info',
              ),
            'default' => 'Benefit',
            'length'  => '',
          ),
      ),
      array(
        'primary' =>
          array(
            0 => 'id',
          ),
        'collate' => 'utf8_general_ci',
        'charset' => 'utf8',
      )
    );
  }

  public function postUp()
  {
    $value = new PopularCriterion();
    $value->name = 'Value';
    $value->description = 'How much value do the following have for you? 1 does not give me any value, 5 is very valuable to me';
    $value->variable_type = 'Benefit';
    $value->measurement = 'five point scale';
    $value->save();

    $usability = new PopularCriterion();
    $usability->name = 'Usability';
    $usability->description = 'How easy to use do you think the following are? 1 is very difficult to use and 5 is very easy to use';
    $usability->variable_type = 'Benefit';
    $usability->measurement = 'five point scale';
    $usability->save();

    $uniqueness = new PopularCriterion();
    $uniqueness->name = 'Uniqueness';
    $uniqueness->description = 'How unique are the following? 1 not unique at all 5 completely unique';
    $uniqueness->variable_type = 'Benefit';
    $uniqueness->measurement = 'five point scale';
    $uniqueness->save();

    $feasibility = new PopularCriterion();
    $feasibility->name = 'Feasibility';
    $feasibility->description = 'How feasible do you think are the following? 1 not very feasible 5 is very feasible';
    $feasibility->variable_type = 'Benefit';
    $feasibility->measurement = 'five point scale';
    $feasibility->save();

    $salesPotential = new PopularCriterion();
    $salesPotential->name = 'Sales potential';
    $salesPotential->description = 'How easy would it be to sell the following? 1 very difficult, 5 very easy';
    $salesPotential->variable_type = 'Benefit';
    $salesPotential->measurement = 'five point scale';
    $salesPotential->save();

    $hourEstimate = new PopularCriterion();
    $hourEstimate->name = 'Hour Estimate';
    $hourEstimate->description = 'How many hours do you estimate it would take to build the following?';
    $hourEstimate->variable_type = 'Cost';
    $hourEstimate->measurement = 'direct rating';
    $hourEstimate->save();

    $storyPoints = new PopularCriterion();
    $storyPoints->name = 'Story points';
    $storyPoints->description = 'How many story points would you give the following?';
    $storyPoints->variable_type = 'Cost';
    $storyPoints->measurement = 'direct rating';
    $storyPoints->save();

    $capitalInvestment = new PopularCriterion();
    $capitalInvestment->name = 'Capital Investment';
    $capitalInvestment->description = 'How much do you think the following would cost?';
    $capitalInvestment->variable_type = 'Cost';
    $capitalInvestment->measurement = 'direct rating';
    $capitalInvestment->save();

    $risk = new PopularCriterion();
    $risk->name = 'Risk';
    $risk->description = 'How risky do you think the following is? 1 is very safe, 5 very risky';
    $risk->variable_type = 'Info';
    $risk->measurement = 'five point scale';
    $risk->save();

    $complexity = new PopularCriterion();
    $complexity->name = 'Complexity';
    $complexity->description = 'How complex do you think the following is? 1 very simple and 5 very complex';
    $complexity->variable_type = 'Info';
    $complexity->measurement = 'five point scale';
    $complexity->save();
  }

  public function down()
  {
    $this->dropTable('popular_criterion');
  }
}